<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">

  <% include ../../partials/header.ejs %>

    <style>

      body {
        margin-top: 50px;
      }

      canvas {
        display: block;
        outline: 5px solid SILVER;
        position: absolute;
      }

      #interface-circle {
        background: linear-gradient(to bottom, ORANGERED, ORANGERED, TOMATO, CORAL, LIGHTSALMON, PALEGOLDENROD, WHITESMOKE, SKYBLUE, SKYBLUE);
      }
    </style>
</head>

<body>


  <canvas id="interface-circle"></canvas>


  <script>
    var interfaceCircle = document.getElementById("interface-circle");
    interfaceCircle.width = document.documentElement.clientWidth;
    interfaceCircle.height = 400;
    // var socket = io();
    var stage = new createjs.Stage("interface-circle");
    var circle = new createjs.Shape();
    circle.graphics.beginFill("ORANGERED").drawCircle(800, 140, 60);

    stage.addChild(circle);

    createjs.Tween.get(circle, {
        loop: true
      })
      .to({
        x: 400

      }, 1800, createjs.Ease.getPowInOut(1))
      .to({
        x: 0

      }, 1800, createjs.Ease.getPowInOut(1))
      .to({

        x: -400
      }, 1800, createjs.Ease.getPowInOut(1))
      .to({
        x: 0

      }, 1800, createjs.Ease.getPowInOut(1))

    addEventListener("mousemove", function(event) {

      createjs.Tween.get(circle, {
          loop: false
        })
        .to({
          y: event.y - 140
        }, ((circle.y - event.y) * (circle.x - event.x)) * 0.0000001, createjs.Ease.Linear)

    });


    createjs.Ticker.setFPS(60);
    createjs.Ticker.addEventListener("tick", stage);
    stage.update();

    // socket.on('interface+motion_listen', function(data) {
    //   switch (data.command) {
    //     case 'right':
    //       bmp.x += 50;
    //       break;
    //     case 'left':
    //       bmp.x -= 50;
    //       break;
    //   }
    //   stage.update();
    // });
  </script>

</body>

</html>
